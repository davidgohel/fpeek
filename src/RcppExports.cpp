// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// file_nlines_
int file_nlines_(std::string filename);
RcppExport SEXP _fpeek_file_nlines_(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(file_nlines_(filename));
    return rcpp_result_gen;
END_RCPP
}
// file_head_str_
std::vector< std::string> file_head_str_(std::string filename, int n);
RcppExport SEXP _fpeek_file_head_str_(SEXP filenameSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(file_head_str_(filename, n));
    return rcpp_result_gen;
END_RCPP
}
// file_head_print_
void file_head_print_(std::string filename, int n);
RcppExport SEXP _fpeek_file_head_print_(SEXP filenameSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    file_head_print_(filename, n);
    return R_NilValue;
END_RCPP
}
// file_tail_str_
std::vector< std::string> file_tail_str_(std::string filename, int n);
RcppExport SEXP _fpeek_file_tail_str_(SEXP filenameSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(file_tail_str_(filename, n));
    return rcpp_result_gen;
END_RCPP
}
// file_tail_print_
void file_tail_print_(std::string filename, int n);
RcppExport SEXP _fpeek_file_tail_print_(SEXP filenameSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    file_tail_print_(filename, n);
    return R_NilValue;
END_RCPP
}
// file_iconv_
void file_iconv_(std::string filename, std::string encoding, std::string encto);
RcppExport SEXP _fpeek_file_iconv_(SEXP filenameSEXP, SEXP encodingSEXP, SEXP enctoSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type encoding(encodingSEXP);
    Rcpp::traits::input_parameter< std::string >::type encto(enctoSEXP);
    file_iconv_(filename, encoding, encto);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fpeek_file_nlines_", (DL_FUNC) &_fpeek_file_nlines_, 1},
    {"_fpeek_file_head_str_", (DL_FUNC) &_fpeek_file_head_str_, 2},
    {"_fpeek_file_head_print_", (DL_FUNC) &_fpeek_file_head_print_, 2},
    {"_fpeek_file_tail_str_", (DL_FUNC) &_fpeek_file_tail_str_, 2},
    {"_fpeek_file_tail_print_", (DL_FUNC) &_fpeek_file_tail_print_, 2},
    {"_fpeek_file_iconv_", (DL_FUNC) &_fpeek_file_iconv_, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_fpeek(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
